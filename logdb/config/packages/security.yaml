security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\User:
            algorithm: bcrypt
        App\Document\User:
            algorithm: bcrypt
#    providers:
#        in_memory: { memory: ~ }
    providers:
        entity_provider:
            entity:
                class: App\Entity\User
                property: username
        entity_provider2:
            mongodb:
                class: App\Document\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern:  /api/login
            stateless: true
            anonymous: true
            json_login:
                provider: entity_provider2
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        register:
            pattern:  ^/register
            stateless: true
            anonymous: true

        api_register:
            pattern:  /api/register_jwt
            stateless: true
            anonymous: true


        api:
            pattern:  ^/api
            stateless: true
            anonymous: false
            provider: entity_provider2
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            anonymous: true
            provider: entity_provider
            guard:
                authenticators:
                    - App\Security\AppLogInAuthenticator
            logout:
                path:   app_logout

                #                 where to redirect after logout
                target: /login

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
          - { path: /login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
          - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
          - { path: ^/api/register_jwt, roles: IS_AUTHENTICATED_ANONYMOUSLY }
          - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
          - { path: /api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
          - { path: ^/dashboard, roles: IS_AUTHENTICATED_FULLY }
